buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "java"

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

version = modVersion
group = modGroup
archivesBaseName = modBaseName

minecraft {
    version = project.forgeVersion
    runDir = "run"

    replace "@MCVERSION@", project.modVersion
    replaceIn "Uplink.java"

    mappings = project.mcpVersion
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io/' }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    embed 'club.minnced:java-discord-rpc:v2.0.1'
    compile 'club.minnced:java-discord-rpc:v2.0.1'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        expand "version": project.version, "mcversion": project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

runClient {

    args = ["--username=ijo42"]
    jvmArgs "-Xmx1G", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseG1GC", "-XX:G1NewSizePercent=20", "-XX:G1ReservePercent=20", "-XX:MaxGCPauseMillis=50", "-XX:G1HeapRegionSize=32M"

}

runServer {

    jvmArgs "-Xmx1G", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseG1GC", "-XX:G1NewSizePercent=20", "-XX:G1ReservePercent=20", "-XX:MaxGCPauseMillis=50", "-XX:G1HeapRegionSize=32M"

}

jar {
    from configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
}

jar.archiveName = "${modBaseName}-${project.minecraft.version}-${project.version}-mod.jar"

task signJar(type: SignJar, dependsOn: reobfJar) {
    inputFile = jar.archivePath
    outputFile = jar.archivePath
    keyStore="fingerprint.jks"
    alias="signFiles"
    storePass="someTrue"
    keyPass="someTrue"
}

compileJava.options.encoding = 'UTF-8'

build.dependsOn signJar